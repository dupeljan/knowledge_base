edge(1,2).
edge(1,3).
edge(1,4).
edge(2,4).
edge(3,4).
edge(3,5).
edge(4,5).
edge(5,6).
p(X,Y,_):-edge(X,Y).

children(1,[2,3,4]).
children(2,[1,4]).
children(3,[1,4,5]).
children(4,[1,2,3,5]).
children(5,[6,3,4]).
children(6,[5]).

search(X,Y,[X,Y]):-(p(X,Y,_);p(Y,X,_)),!.
search(X,Y,[X|T]):-(p(X,Z,_);p(Z,X,_)),search(Z,Y,T),not(member(X,T)),!.

path(X,Y,T):-path(X,Y,[],T).
path(X,Y,Seen,[X,Y]):- \+memberchk(X,Seen),(edge(X,Y);edge(Y,X)).
path(X,Z,Seen,[X|T]):- \+memberchk(X,Seen),(edge(X,Y);edge(Y,X)),
    path(Y,Z,[X|Seen],T).

%Первый попавшийся путь из вершины Start
path_first(Start,Answer):- path_start([Start],Answer),!.
path_start([X|T],Y):-children(X,C), member(Some,C), \+memberchk(Some,T), T1 = [Some,X|T],path_start(T1,Y).

path_start(X,X).
